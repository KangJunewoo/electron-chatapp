{"version":3,"sources":["../app.js"],"names":["createError","require","express","path","cookieParser","logger","io","headerPrinter","indexRouter","usersRouter","User","jsonwebtoken","Verifier","JWTVerifier","app","set","join","__dirname","use","json","urlencoded","extended","static","socket","next","console","log","token","handshake","query","cert","verify","err","decodedUser","name","isExistNewToken","Error","findOne","id","then","user","catch","error","on","emit","message","ack","findUser","exec","createRoom","Promise","resolve","reject","sendAck","foundUser","undefined","isSuccess","sendFailureAck","lexicalObject","friend","Task","updateTasks","_id","createFindFriendTask","requestUser","excuteFindFriendTask","createFriendShipTask","friendReceiveRequests","push","friendRequests","save","excuteFriendShipTask","task","all","sendSuccessAck","req","res","locals","get","status","render","module","exports"],"mappings":"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","file":"app.js","sourcesContent":["'use strict';\n\nconst createError = require('http-errors');\nconst express = require('express');\nconst path = require('path');\nconst cookieParser = require('cookie-parser');\nconst logger = require('morgan');\nconst io = require('socket.io')();\nconst headerPrinter = require('./headerPrinter');\nconst indexRouter = require('./routes/index');\nconst usersRouter = require('./routes/users');\n\nconst User = require('./model/User');\nconst jsonwebtoken = require('jsonwebtoken');\nconst Verifier = require('./util/Verifier');\nconst JWTVerifier = new Verifier();\nconst app = express();\napp.io = io;\n// view engine setup\napp.set('views', path.join(__dirname, 'views'));\napp.set('view engine', 'jade');\n\napp.use(logger('dev'));\napp.use(headerPrinter);\napp.use(express.json());\napp.use(express.urlencoded({ extended: false }));\napp.use(cookieParser());\napp.use(express.static(path.join(__dirname, 'public')));\n\napp.use('/', indexRouter);\napp.use('/users', usersRouter);\n// catch 404 and forward to error handler\nio.use((socket,next)=>{\n  console.log('handshake');\n  const token = socket.handshake.query.token;\n  const cert = \"secret\";\n  console.log(`token is ${token}`);\n  jsonwebtoken.verify(token,cert,(err,decodedUser)=>{\n    if(err){\n      // err.name==='TokenExpiredError'?next(new Error('TokenRefresh')):next(new Error('Unauthorized'));\n      if(err.name==='TokenExpiredError'){\n        socket.isExistNewToken = true;\n        return next();\n      }else{\n        return next(new Error('Unauthorized'));\n      }\n      return;\n    }\n    User.findOne({id:decodedUser.id})\n      .then((user)=>{\n        if(!user){\n          return next(new Error('Unauthorized'));\n        }\n        console.log(user.token===token);\n        user.token===token?next():next(new Error('Unauthorized'));\n        return;\n      })\n      .catch((error)=>{\n        return next(new Error('Unauthorized'));\n      });\n  });\n});\nio.on('connection',(socket)=>{\n  console.log('connect' + socket.id);\n  console.log('isExist new token ?' + socket.isExistNewToken);\n  if(socket.isExistNewToken){\n    socket.emit('tokenRefresh-Required');\n  }\n  socket.on('hello',(message)=>{\n    console.log(message);\n  });\n  socket.on('disconnect',(err)=>{\n    console.log(err);\n  });\n  socket.on('createRoom',(message,ack)=>{\n\n    const findUser = (decodedUser)=>{\n      return User.findOne({id:decodedUser.id}).exec();\n    };\n    const createRoom = (user)=>{\n      return new Promise((resolve,reject)=>{\n        if(!user){\n          return reject();\n        }\n\n      });\n    };\n    const sendAck = (user)=>{\n\n        console.log(user.token===token);\n        user.token===token?next():next(new Error('Unauthorized'));\n        return;\n    };\n    JWTVerifier.verify(socket,message.token)\n      .then(findUser)\n      .then(createRoom)\n      .then(sendAck)\n  });\n  socket.on('searchUser',(message,ack)=>{\n    const findUser = ()=>{\n      return User.findOne({id:message.id});\n    };\n    const sendAck = (user)=>{\n      if(!user){\n        const error = new Error('Not Found User');\n        message.foundUser = undefined;\n        message.isSuccess = false;\n        message.Error = error;\n        ack(message);\n        return;\n      }\n      message.foundUser = user;\n      message.isSuccess = true;\n      message.Error = undefined;\n      ack(message);\n    };\n    const sendFailureAck = (error)=>{\n      console.log(error);\n      message.foundUser = undefined;\n      message.isSuccess = false;\n      message.Error = error;\n      ack(message);\n    };\n    JWTVerifier.verify(socket,message.token)\n      .then(findUser)\n      .then(sendAck)\n      .catch(sendFailureAck)\n  });\n  socket.on('requestFriendShipUser',(message,ack)=>{\n    const lexicalObject = {\n      User:undefined,\n      friend:undefined,\n      Task:undefined,\n      updateTasks:[]\n    };\n\n    const findUser = (decodedUser)=>{\n      return new Promise((resolve,reject)=>{\n        User.findOne({_id:decodedUser._id})\n          .then((user)=>{\n            if(!user)return reject(new Error('User Not Found'));\n            return resolve(user);\n          })\n          .catch((error)=>{\n            return reject(error);\n          });\n      });\n    };\n    const createFindFriendTask = (requestUser)=>{\n      return new Promise((resolve, reject)=>{\n        lexicalObject.User = requestUser;\n        lexicalObject.Task = User.findOne({id:message.id});\n        requestUser === undefined?reject(new Error('Not Found User')):resolve(lexicalObject);\n      });\n    };\n    const excuteFindFriendTask = (lexicalObject)=>{\n      return lexicalObject.Task;\n    };\n    const createFriendShipTask = (friend)=>{\n      return new Promise((resolve,reject)=>{\n        if(!friend){\n          return reject(new Error('Not Found Friend'));\n        }\n        friend.friendReceiveRequests.push(lexicalObject.User._id);\n        lexicalObject.User.friendRequests.push(friend._id);\n        lexicalObject.updateTasks.push(friend.save().exec());\n        lexicalObject.updateTasks.push(lexicalObject.User.save().exec());\n        return resolve(lexicalObject);\n      });\n    };\n    const excuteFriendShipTask = (task)=>{\n      return Promise.all(task.updateTasks);\n    };\n    const sendSuccessAck = ()=>{\n      message.isSuccess = true;\n      ack(message);\n    };\n    const sendFailureAck = ()=>{\n      message.isSuccess = false;\n      ack(message);\n    };\n    JWTVerifier.verify(socket,message.token)\n      .then(findUser)\n      .then(createFindFriendTask)\n      .then(excuteFindFriendTask)\n      .then(createFriendShipTask)\n      .then(excuteFriendShipTask)\n      .then(sendSuccessAck)\n      .catch(sendFailureAck)\n  });\n  socket.on('reconnectSuccess',(message)=>{\n    console.log(`reconnect with ${message.message}`);\n  });\n});\n\napp.use(function(req, res, next) {\n  next(createError(404));\n});\n\n\n// error handler\napp.use(function(err, req, res, next) {\n  // set locals, only providing error in development\n  res.locals.message = err.message;\n  res.locals.error = req.app.get('env') === 'development' ? err : {};\n  console.log(err.message);\n  // render the error page\n  res.status(err.status || 500);\n  res.render('error');\n});\n\nmodule.exports = app;\n"]}