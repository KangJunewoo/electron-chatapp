{"version":3,"sources":["../../../routes/middleware/token.js"],"names":["exports","validateParameter","req","res","next","token","headers","id","query","error","Error","status","verifyToken","jsonwebtoken","require","cert","verify","err","decodedUser","name","json","findUser","User","setUser","user","SearchUser","OnError","findOne","select","password","CreatedAt","then","catch","createToken","options","algorithm","expiresIn","issuer","plainObject","toObject","getters","sign","refreshedToken","set","save","responseToUser","console","log"],"mappings":"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","file":"token.js","sourcesContent":["/**\n * Created by kishe56@gmail.com on 2018. 7. 18.\n * Blog : https://kishe89.github.io\n * Github : https://github.com/kishe89\n */\n'use strict';\n\nexports.validateParameter = (req,res,next)=>{\n  const token = req.headers['x-access-token'];\n  const id = req.query.id;\n  if(!token){\n    const error = new Error('Bad Request');\n    error.status = 400;\n    return next(error);\n  }\n  if(!id){\n    const error = new Error('Bad Request');\n    error.status = 400;\n    return next(error);\n  }\n\n  return next();\n};\n\nexports.verifyToken = (req,res,next)=>{\n  const jsonwebtoken = require('jsonwebtoken');\n  const token = req.headers['x-access-token'];\n  const cert = \"secret\";\n  jsonwebtoken.verify(token,cert,(err,decodedUser)=>{\n    if(err){\n      if(err.name==='TokenExpiredError'){\n        return next();\n      }\n      else {\n        return next(new Error('Unauthorized'));\n      }\n    }\n    res.json({token:token});\n  });\n};\nexports.findUser = (req,res,next)=>{\n\n  const User = require('../../model/User');\n  const id = req.query.id;\n  const setUser = (user)=>{\n    if(!user){\n      const error = new Error('User Not Found');\n      error.status = 404;\n      return next(error);\n    }\n    req.SearchUser = user;\n    return next();\n\n  };\n  const OnError = (error)=>{\n    return next(error);\n  };\n  User.findOne({id:id}).select({id:1,password:1,CreatedAt:1})\n    .then(setUser)\n    .catch(OnError);\n};\nexports.createToken = (req,res,next)=>{\n  const jsonwebtoken = require('jsonwebtoken');\n  const options = {\n    algorithm:\"HS256\",\n    expiresIn:\"60000\",\n    issuer:\"http://127.0.0.1\"\n  };\n  const cert = \"secret\";\n  const plainObject = req.SearchUser.toObject({getters:true});\n  jsonwebtoken.sign(plainObject,cert,options,(err,token)=>{\n    if(err){\n      return next(err);\n    }\n    req.refreshedToken = token;\n    req.SearchUser.set({token:token});\n    req.SearchUser.save()\n      .then(()=>{\n        return next();\n      })\n      .catch((err)=>{\n        return next(err);\n      });\n  });\n}\nexports.responseToUser = (req,res,next)=>{\n  console.log('refreshed : '+req.refreshedToken);\n  res.json({token:req.refreshedToken});\n};"]}