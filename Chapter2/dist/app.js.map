{"version":3,"sources":["../app.js"],"names":["createError","require","express","path","cookieParser","logger","io","headerPrinter","indexRouter","usersRouter","mongoose","Initializer","User","jsonwebtoken","app","InitMongoDB","process","env","set","join","__dirname","use","json","urlencoded","extended","static","req","res","next","socket","token","handshake","query","cert","console","log","verify","err","decodedUser","name","Error","findOne","id","then","user","catch","error","on","message","locals","get","status","render","module","exports"],"mappings":"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","file":"app.js","sourcesContent":["'use strict';\n\nconst createError = require('http-errors');\nconst express = require('express');\nconst path = require('path');\nconst cookieParser = require('cookie-parser');\nconst logger = require('morgan');\nconst io = require('socket.io')();\nconst headerPrinter = require('./headerPrinter');\nconst indexRouter = require('./routes/index');\nconst usersRouter = require('./routes/users');\nconst mongoose = require('mongoose');\nconst Initializer = require('./init/Initializer');\nconst User = require('./model/User');\nconst jsonwebtoken = require('jsonwebtoken');\nconst app = express();\nInitializer.InitMongoDB(process.env,mongoose);\napp.io = io;\n// view engine setup\napp.set('views', path.join(__dirname, 'views'));\napp.set('view engine', 'jade');\n\napp.use(logger('dev'));\napp.use(headerPrinter);\napp.use(express.json());\napp.use(express.urlencoded({ extended: false }));\napp.use(cookieParser());\napp.use(express.static(path.join(__dirname, 'public')));\n\napp.use('/', indexRouter);\napp.use('/users', usersRouter);\n// catch 404 and forward to error handler\napp.use(function(req, res, next) {\n  next(createError(404));\n});\n\nio.use((socket,next)=>{\n  const token = socket.handshake.query.token;\n  const cert = \"secret\";\n  console.log(`token is ${token}`);\n  jsonwebtoken.verify(token,cert,(err,decodedUser)=>{\n    if(err){\n      err.name==='TokenExpiredError'?next(new Error('TokenRefresh')):next(new Error('Unauthorized'));\n      return;\n    }\n    User.findOne({id:decodedUser.id})\n      .then((user)=>{\n        if(!user){\n          return next(new Error('Unauthorized'));\n        }\n        user.token===token?next():next(new Error('Unauthorized'));\n        return;\n      })\n      .catch((error)=>{\n        return next(new Error('Unauthorized'));\n      });\n  });\n});\nio.on('connection',(socket)=>{\n  socket.on('hello',(message)=>{\n    console.log(message);\n  });\n  socket.on('disconnect',(err)=>{\n    console.log(err);\n  });\n});\n\n// error handler\napp.use(function(err, req, res, next) {\n  // set locals, only providing error in development\n  res.locals.message = err.message;\n  res.locals.error = req.app.get('env') === 'development' ? err : {};\n\n  // render the error page\n  res.status(err.status || 500);\n  res.render('error');\n});\n\nmodule.exports = app;\n"]}