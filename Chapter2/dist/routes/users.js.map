{"version":3,"sources":["../../routes/users.js"],"names":["express","require","router","Router","UserModel","bcrypt","jsonwebtoken","post","req","res","next","body","id","password","error","Error","status","OnError","comparePassword","user","SearchUser","compare","compareResultResponse","isValid","findOne","select","CreatedAt","then","catch","options","algorithm","expiresIn","issuer","cert","plainObject","toObject","getters","sign","err","token","CreatedToken","updateResultResponse","updatedUser","set","save","json","console","log","generateStrictPassword","salt","hash","createUser","strictPassword","User","CreatedUser","genSalt","module","exports"],"mappings":"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","file":"users.js","sourcesContent":["'use strict';\nconst express = require('express');\nconst router = express.Router();\nconst UserModel = require('../model/User');\nconst bcrypt = require('bcrypt');\nconst jsonwebtoken = require('jsonwebtoken');\nrouter.post('/login',(req,res,next)=>{\n  const {id,password} = req.body;\n  if(!id){\n    const error = new Error(\"Bad request\");\n    error.status = 400;\n    return next(error);\n\n  }else if(!password){\n    const error = new Error(\"Bad request\");\n    error.status = 400;\n    return next(error);\n  }\n  return next();\n});\nrouter.post('/login',(req,res,next)=>{\n  const {id,password} = req.body;\n  const OnError = (error)=>{\n    return next(error);\n  };\n  const comparePassword = (user)=>{\n    if(!user){\n      const error = new Error('User Not Found');\n      error.status = 404;\n      return next(error);\n    }\n    req.SearchUser = user;\n    return bcrypt.compare(password,user.password);\n\n  };\n  const compareResultResponse = (isValid)=>{\n    if(isValid){\n      return next();\n    }\n    const error = new Error('Invalid password');\n    error.status = 401;\n    return next(error);\n  };\n  UserModel.findOne({id:id}).select({id:1,password:1,CreatedAt:1})\n    .then(comparePassword)\n    .then(compareResultResponse)\n    .catch(OnError);\n});\nrouter.post('/login',(req,res,next)=>{\n  const options = {\n    algorithm:\"HS256\",\n    expiresIn:\"10000\",\n    issuer:\"http://127.0.0.1\"\n  };\n  const cert = \"secret\";\n  const plainObject = req.SearchUser.toObject({getters:true});\n  jsonwebtoken.sign(plainObject,cert,options,(err,token)=>{\n    if(err){\n      return next(err);\n    }\n    req.CreatedToken = token;\n    return next();\n  });\n});\nrouter.post('/login',(req,res,next)=>{\n  const OnError = (error)=>{\n    return next(error);\n  };\n\n  const updateResultResponse = (updatedUser)=>{\n    req.SearchUser = updatedUser;\n    return next();\n  };\n  req.SearchUser.set({token:req.CreatedToken});\n  req.SearchUser.save()\n    .then(updateResultResponse)\n    .catch(OnError)\n});\nrouter.post('/login',(req,res,next)=>{\n  res.json({token:req.CreatedToken});\n});\n\n\nrouter.post('/',(req,res,next)=>{\n\n  const {id,password} = req.body;\n\n  console.log(req.body);\n  if(!id){\n    const error = new Error(\"Bad Request\");\n    error.status = 400;\n    return next(error);\n\n  }else if(!password){\n    const error = new Error(\"Bad Request\");\n    error.status = 400;\n    return next(error);\n  }\n  const generateStrictPassword = (salt)=>{\n    return bcrypt.hash(password,salt);\n  };\n  const createUser = (strictPassword)=>{\n    const User = new UserModel({\n      id:id,\n      password:strictPassword\n    });\n    req.CreatedUser = User;\n    next();\n  };\n  const OnError = (error)=>{\n    return next(error);\n  };\n  bcrypt.genSalt(13)\n    .then(generateStrictPassword)\n    .then(createUser)\n    .catch(OnError)\n\n});\nrouter.post('/',(req,res,next)=>{\n\n  const OnError = (error)=>{\n    return next(error);\n  };\n  req.CreatedUser.save()\n    .then((user)=>{\n      req.CreatedUser = user;\n      return next();\n    })\n    .catch(OnError)\n});\nrouter.post('/',(req,res,next)=>{\n  res.json(req.CreatedUser);\n});\nmodule.exports = router;\n"]}