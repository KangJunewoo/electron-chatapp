{"version":3,"sources":["../../service/TokenManager.js"],"names":["TokenManager","Error","id","refreshToken","setId","userId","getId","getToken","setToken","token","module","exports"],"mappings":"AAAA;;;;;AAKA;;AAEA,SAASA,YAAT,GAAwB;;AAEtB,MAAG,EAAE,gBAAgBA,YAAlB,CAAH,EAAmC;AACjC,UAAM,IAAIC,KAAJ,CAAU,mCAAV,CAAN;AACD;AACD,MAAIC,WAAJ;AACA,MAAIC,qBAAJ;AACA,OAAKC,KAAL,GAAa,UAACC,MAAD,EAAU;AACrBH,SAAKG,MAAL;AACD,GAFD;AAGA,OAAKC,KAAL,GAAa,YAAI;AACf,WAAOJ,EAAP;AACD,GAFD;AAGA,OAAKK,QAAL,GAAgB,YAAI;AAClB,WAAOJ,YAAP;AACD,GAFD;AAGA,OAAKK,QAAL,GAAgB,UAACC,KAAD,EAAS;AACvBN,mBAAeM,KAAf;AACD,GAFD;AAGD;;AAEDC,OAAOC,OAAP,GAAiBX,YAAjB","file":"TokenManager.js","sourcesContent":["/**\n * Created by kishe56@gmail.com on 2018. 9. 13.\n * Blog : https://kishe89.github.io\n * Github : https://github.com/kishe89\n */\n'use strict';\n\nfunction TokenManager() {\n\n  if(!(this instanceof TokenManager)){\n    throw new Error('Must be created with new key word');\n  }\n  let id;\n  let refreshToken;\n  this.setId = (userId)=>{\n    id = userId;\n  }\n  this.getId = ()=>{\n    return id;\n  }\n  this.getToken = ()=>{\n    return refreshToken;\n  }\n  this.setToken = (token)=>{\n    refreshToken = token;\n  }\n}\n\nmodule.exports = TokenManager;"]}