{"version":3,"sources":["../../handler_manager/index.js"],"names":["SocketEvent","require","dict","CONNECT","type","event","handler","ERROR","CONNECT_TIMEOUT","DISCONNECT","HELLO","PING","PONG","RECONNECT_ERROR","RECONNECT_FAILED","RECONNECTING","RECONNECT_ATTEMPT","RECONNECT","TOKENREFRESHREQUIRED","BROADCAST_MESSAGE","RECEIVE_INVITEUSER","module","exports"],"mappings":"AAAA;;;;;;AAMA;;AAEA,IAAMA,cAAcC,QAAQ,qBAAR,CAApB;AACA,IAAMC,OAAO,EAAb;;AAEAA,KAAKF,YAAYG,OAAjB,IAA4B;AAC1BC,QAAK,CADqB;AAE1BC,SAAML,YAAYG,OAFQ;AAG1BG,WAAQL,QAAQ,qBAAR;AAHkB,CAA5B;AAKAC,KAAKF,YAAYO,KAAjB,IAA0B;AACxBH,QAAK,CADmB;AAExBC,SAAML,YAAYO,KAFM;AAGxBD,WAAQL,QAAQ,mBAAR;AAHgB,CAA1B;AAKAC,KAAKF,YAAYQ,eAAjB,IAAoC;AAClCJ,QAAK,CAD6B;AAElCC,SAAML,YAAYQ,eAFgB;AAGlCF,WAAQL,QAAQ,4BAAR;AAH0B,CAApC;AAKAC,KAAKF,YAAYS,UAAjB,IAA+B;AAC7BL,QAAK,CADwB;AAE7BC,SAAML,YAAYS,UAFW;AAG7BH,WAAQL,QAAQ,wBAAR;AAHqB,CAA/B;AAKAC,KAAKF,YAAYU,KAAjB,IAA0B;AACxBN,QAAK,CADmB;AAExBC,SAAML,YAAYU,KAFM;AAGxBJ,WAAQL,QAAQ,mBAAR;AAHgB,CAA1B;AAKAC,KAAKF,YAAYW,IAAjB,IAAyB;AACvBP,QAAK,CADkB;AAEvBC,SAAML,YAAYW,IAFK;AAGvBL,WAAQL,QAAQ,kBAAR;AAHe,CAAzB;AAKAC,KAAKF,YAAYY,IAAjB,IAAyB;AACvBR,QAAK,CADkB;AAEvBC,SAAML,YAAYY,IAFK;AAGvBN,WAAQL,QAAQ,kBAAR;AAHe,CAAzB;AAKAC,KAAKF,YAAYa,eAAjB,IAAoC;AAClCT,QAAK,CAD6B;AAElCC,SAAML,YAAYa,eAFgB;AAGlCP,WAAQL,QAAQ,4BAAR;AAH0B,CAApC;AAKAC,KAAKF,YAAYc,gBAAjB,IAAqC;AACnCV,QAAK,CAD8B;AAEnCC,SAAML,YAAYc,gBAFiB;AAGnCR,WAAQL,QAAQ,6BAAR;AAH2B,CAArC;AAKAC,KAAKF,YAAYe,YAAjB,IAAiC;AAC/BX,QAAK,CAD0B;AAE/BC,SAAML,YAAYe,YAFa;AAG/BT,WAAQL,QAAQ,0BAAR;AAHuB,CAAjC;;AAMAC,KAAKF,YAAYgB,iBAAjB,IAAsC;AACpCZ,QAAK,CAD+B;AAEpCC,SAAML,YAAYgB,iBAFkB;AAGpCV,WAAQL,QAAQ,8BAAR;AAH4B,CAAtC;;AAMAC,KAAKF,YAAYiB,SAAjB,IAA8B;AAC5Bb,QAAK,CADuB;AAE5BC,SAAML,YAAYiB,SAFU;AAG5BX,WAAQL,QAAQ,uBAAR;AAHoB,CAA9B;AAKAC,KAAKF,YAAYkB,oBAAjB,IAAyC;AACvCd,QAAK,CADkC;AAEvCC,SAAML,YAAYkB,oBAFqB;AAGvCZ,WAAQL,QAAQ,mCAAR;AAH+B,CAAzC;AAKAC,KAAKF,YAAYmB,iBAAjB,IAAsC;AACpCf,QAAK,CAD+B;AAEpCC,SAAML,YAAYmB,iBAFkB;AAGpCb,WAAQL,QAAQ,8BAAR;AAH4B,CAAtC;AAKAC,KAAKF,YAAYoB,kBAAjB,IAAuC;AACrChB,QAAK,CADgC;AAErCC,SAAML,YAAYoB,kBAFmB;AAGrCd,WAAQL,QAAQ,+BAAR;AAH6B,CAAvC;;AAOAoB,OAAOC,OAAP,GAAiBpB,IAAjB","file":"index.js","sourcesContent":["/**\n * Created by kishe56@gmail.com on 2018. 7. 3.\n * Blog : https://kishe89.github.io\n * Github : https://github.com/kishe89\n */\n\n'use strict';\n\nconst SocketEvent = require('./event/SocketEvent');\nconst dict = [];\n\ndict[SocketEvent.CONNECT] = {\n  type:0,\n  event:SocketEvent.CONNECT,\n  handler:require('./handler/OnConnect')\n};\ndict[SocketEvent.ERROR] = {\n  type:1,\n  event:SocketEvent.ERROR,\n  handler:require('./handler/OnError')\n};\ndict[SocketEvent.CONNECT_TIMEOUT] = {\n  type:0,\n  event:SocketEvent.CONNECT_TIMEOUT,\n  handler:require('./handler/OnConnectTimeout')\n};\ndict[SocketEvent.DISCONNECT] = {\n  type:1,\n  event:SocketEvent.DISCONNECT,\n  handler:require('./handler/OnDisconnect')\n};\ndict[SocketEvent.HELLO] = {\n  type:0,\n  event:SocketEvent.HELLO,\n  handler:require('./handler/OnHello')\n};\ndict[SocketEvent.PING] = {\n  type:0,\n  event:SocketEvent.PING,\n  handler:require('./handler/OnPing')\n};\ndict[SocketEvent.PONG] = {\n  type:0,\n  event:SocketEvent.PONG,\n  handler:require('./handler/OnPong')\n};\ndict[SocketEvent.RECONNECT_ERROR] = {\n  type:0,\n  event:SocketEvent.RECONNECT_ERROR,\n  handler:require('./handler/OnReconnectError')\n};\ndict[SocketEvent.RECONNECT_FAILED] = {\n  type:0,\n  event:SocketEvent.RECONNECT_FAILED,\n  handler:require('./handler/OnReconnectFailed')\n};\ndict[SocketEvent.RECONNECTING] = {\n  type:0,\n  event:SocketEvent.RECONNECTING,\n  handler:require('./handler/OnReconnecting')\n};\n\ndict[SocketEvent.RECONNECT_ATTEMPT] = {\n  type:1,\n  event:SocketEvent.RECONNECT_ATTEMPT,\n  handler:require('./handler/OnReconnectAttempt')\n};\n\ndict[SocketEvent.RECONNECT] = {\n  type:0,\n  event:SocketEvent.RECONNECT,\n  handler:require('./handler/OnReconnect')\n};\ndict[SocketEvent.TOKENREFRESHREQUIRED] = {\n  type:1,\n  event:SocketEvent.TOKENREFRESHREQUIRED,\n  handler:require('./handler/OnTokenRefereshRequired')\n};\ndict[SocketEvent.BROADCAST_MESSAGE] = {\n  type:1,\n  event:SocketEvent.BROADCAST_MESSAGE,\n  handler:require('./handler/OnBroadcastMessage')\n};\ndict[SocketEvent.RECEIVE_INVITEUSER] = {\n  type:1,\n  event:SocketEvent.RECEIVE_INVITEUSER,\n  handler:require('./handler/OnReceiveInviteUser')\n};\n\n\nmodule.exports = dict;"]}