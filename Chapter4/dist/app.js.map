{"version":3,"sources":["../app.js"],"names":["createError","require","express","path","cookieParser","logger","io","headerPrinter","indexRouter","usersRouter","mongoose","Initializer","User","Room","Message","jsonwebtoken","SocketRoutes","app","InitMongoDB","process","env","set","join","__dirname","use","json","urlencoded","extended","static","req","res","next","handshake","on","socket","functions","TokenRefreshEmmit","SetSocketId","then","user","JoinRooms","createRoom","event","hello","disconnect","searchUser","roomListSearch","InviteUser","leaveRoom","searchFriend","requestFriendShipUser","acceptFriendShipRequest","denyFriendShipRequest","removeFriendShipRequest","messageSend","messageLoad","searchFriendRequest","joinRoomRequest","err","locals","message","error","get","console","log","status","render","module","exports"],"mappings":"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","file":"app.js","sourcesContent":["'use strict';\n\nconst createError = require('http-errors');\nconst express = require('express');\nconst path = require('path');\nconst cookieParser = require('cookie-parser');\nconst logger = require('morgan');\nconst io = require('socket.io')();\nconst headerPrinter = require('./headerPrinter');\nconst indexRouter = require('./routes/index');\nconst usersRouter = require('./routes/users');\nconst mongoose = require('mongoose');\nconst Initializer = require('./init/Initializer');\nconst User = require('./model/User');\nconst Room = require('./model/Room');\nconst Message =require('./model/Message');\nconst jsonwebtoken = require('jsonwebtoken');\nconst SocketRoutes = require('./socketRoutes');\nconst app = express();\nInitializer.InitMongoDB(process.env,mongoose);\napp.io = io;\n// view engine setup\napp.set('views', path.join(__dirname, 'views'));\napp.set('view engine', 'jade');\n\napp.use(logger('dev'));\napp.use(headerPrinter);\napp.use(express.json());\napp.use(express.urlencoded({ extended: false }));\napp.use(cookieParser());\napp.use(express.static(path.join(__dirname, 'public')));\n\napp.use('/', indexRouter);\napp.use('/users', usersRouter);\n// catch 404 and forward to error handler\napp.use(function(req, res, next) {\n  next(createError(404));\n});\n\nio.use(SocketRoutes.handshake);\nio.on('connection',(socket)=>{\n  SocketRoutes.functions.TokenRefreshEmmit(socket);\n  SocketRoutes.functions.SetSocketId(socket).then((user)=>{\n    SocketRoutes.functions.JoinRooms(user,socket);\n  });\n  SocketRoutes.createRoom(socket,SocketRoutes.event.createRoom);\n  SocketRoutes.hello(socket,SocketRoutes.event.hello);\n  SocketRoutes.disconnect(socket,SocketRoutes.event.disconnect);\n  SocketRoutes.searchUser(socket,SocketRoutes.event.searchUser);\n  SocketRoutes.roomListSearch(socket,SocketRoutes.event.roomListSearch);\n  SocketRoutes.InviteUser(socket,io,SocketRoutes.event.InviteUser);\n  SocketRoutes.leaveRoom(socket,SocketRoutes.event.leaveRoom);\n  SocketRoutes.searchFriend(socket,SocketRoutes.event.searchFriend);\n  SocketRoutes.requestFriendShipUser(socket,SocketRoutes.event.requestFriendShipUser);\n  SocketRoutes.acceptFriendShipRequest(socket,SocketRoutes.event.acceptFriendShipRequest);\n  SocketRoutes.denyFriendShipRequest(socket,SocketRoutes.event.denyFriendShipRequest);\n  SocketRoutes.removeFriendShipRequest(socket,SocketRoutes.event.removeFriendShipRequest);\n  SocketRoutes.messageSend(io,socket,SocketRoutes.event.messageSend);\n  SocketRoutes.messageLoad(socket,SocketRoutes.event.messageLoad);\n  SocketRoutes.searchFriendRequest(socket,SocketRoutes.event.searchFriendRequest);\n  SocketRoutes.joinRoomRequest(socket,SocketRoutes.event.joinRoomRequest);\n\n});\n\n// error handler\napp.use(function(err, req, res, next) {\n  // set locals, only providing error in development\n  res.locals.message = err.message;\n  res.locals.error = req.app.get('env') === 'development' ? err : {};\n  console.log(err);\n  // render the error page\n  res.status(err.status || 500);\n  res.render('error');\n});\n\nmodule.exports = app;\n"]}