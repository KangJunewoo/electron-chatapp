{"version":3,"sources":["../../../socketRoutes/createRoom/index.js"],"names":["module","exports","socket","event","Verifier","require","JWTVerifier","createRoom","pushRoomToUser","joinRoom","sendSuccessAck","sendFailureAck","on","message","ack","verify","token","then","decodedUser","result","catch","error"],"mappings":"AAAA;;;;;AAKA;;AAEAA,OAAOC,OAAP,GAAiB,UAACC,MAAD,EAAQC,KAAR,EAAgB;AAC/B,MAAMC,WAAWC,QAAQ,qBAAR,CAAjB;AACA,MAAMC,cAAc,IAAIF,QAAJ,EAApB;;AAEA,MAAMG,aAAaF,QAAQ,yBAAR,CAAnB;AACA,MAAMG,iBAAiBH,QAAQ,6BAAR,CAAvB;AACA,MAAMI,WAAWJ,QAAQ,uBAAR,CAAjB;AACA,MAAMK,iBAAiBL,QAAQ,6BAAR,CAAvB;AACA,MAAMM,iBAAiBN,QAAQ,6BAAR,CAAvB;AACAH,SAAOU,EAAP,CAAUT,KAAV,EAAgB,UAACU,OAAD,EAASC,GAAT,EAAe;AAC7BR,gBAAYS,MAAZ,CAAmBb,MAAnB,EAA0BW,QAAQG,KAAlC,EACGC,IADH,CACQ,UAACC,WAAD,EAAe;AACnB,aAAOX,WAAWW,WAAX,EAAuBL,OAAvB,CAAP;AACD,KAHH,EAIGI,IAJH,CAIQ,UAACE,MAAD,EAAU;AACd,aAAOX,eAAeW,MAAf,CAAP;AACD,KANH,EAOGF,IAPH,CAOQ,UAACE,MAAD,EAAU;AACd,aAAOV,SAASP,MAAT,EAAgBiB,MAAhB,CAAP;AACD,KATH,EAUGF,IAVH,CAUQ,UAACE,MAAD,EAAU;AACd,aAAOT,eAAeS,MAAf,EAAsBN,OAAtB,EAA8BC,GAA9B,CAAP;AACD,KAZH,EAaGM,KAbH,CAaS,UAACC,KAAD,EAAS;AACd,aAAOV,eAAeU,KAAf,EAAqBR,OAArB,EAA6BC,GAA7B,CAAP;AACD,KAfH;AAgBD,GAjBD;AAkBD,CA3BD","file":"index.js","sourcesContent":["/**\n * Created by kishe56@gmail.com on 2018. 9. 18.\n * Blog : https://kishe89.github.io\n * Github : https://github.com/kishe89\n */\n'use strict';\n\nmodule.exports = (socket,event)=>{\n  const Verifier = require('../../util/Verifier');\n  const JWTVerifier = new Verifier();\n\n  const createRoom = require('./middleware/createRoom');\n  const pushRoomToUser = require('./middleware/pushRoomToUser');\n  const joinRoom = require('./middleware/joinRoom');\n  const sendSuccessAck = require('./middleware/sendSuccessAck');\n  const sendFailureAck = require('./middleware/sendFailureAck');\n  socket.on(event,(message,ack)=>{\n    JWTVerifier.verify(socket,message.token)\n      .then((decodedUser)=>{\n        return createRoom(decodedUser,message);\n      })\n      .then((result)=>{\n        return pushRoomToUser(result);\n      })\n      .then((result)=>{\n        return joinRoom(socket,result);\n      })\n      .then((result)=>{\n        return sendSuccessAck(result,message,ack);\n      })\n      .catch((error)=>{\n        return sendFailureAck(error,message,ack);\n      })\n  });\n}"]}