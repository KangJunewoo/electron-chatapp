{"version":3,"sources":["../../../socketRoutes/InviteUser/index.js"],"names":["module","exports","socket","io","event","Verfier","require","JWTVerifier","findTargetUser","pushUserToRoom","sendMessageToTargetUser","sendSuccessAck","sendFailureAck","on","message","ack","verify","token","then","decodedUser","result","catch","error"],"mappings":"AAAA;;;;;AAKA;;AAGAA,OAAOC,OAAP,GAAiB,UAACC,MAAD,EAAQC,EAAR,EAAYC,KAAZ,EAAoB;AACnC,MAAMC,UAAUC,QAAQ,qBAAR,CAAhB;AACA,MAAMC,cAAc,IAAIF,OAAJ,EAApB;AACA,MAAMG,iBAAiBF,QAAQ,6BAAR,CAAvB;AACA,MAAMG,iBAAiBH,QAAQ,6BAAR,CAAvB;AACA,MAAMI,0BAA0BJ,QAAQ,sCAAR,CAAhC;AACA,MAAMK,iBAAiBL,QAAQ,6BAAR,CAAvB;AACA,MAAMM,iBAAiBN,QAAQ,6BAAR,CAAvB;AACAJ,SAAOW,EAAP,CAAUT,KAAV,EAAgB,UAACU,OAAD,EAASC,GAAT,EAAe;;AAE7BR,gBAAYS,MAAZ,CAAmBd,MAAnB,EAA0BY,QAAQG,KAAlC,EACGC,IADH,CACQ,UAACC,WAAD,EAAe;AACnB,aAAOX,eAAeW,WAAf,EAA2BL,OAA3B,CAAP;AACD,KAHH,EAIGI,IAJH,CAIQ,UAACE,MAAD,EAAU;AACd,aAAOX,eAAeW,MAAf,EAAsBN,OAAtB,CAAP;AACD,KANH,EAOGI,IAPH,CAOQ,UAACE,MAAD,EAAU;AACd,aAAOV,wBAAwBU,MAAxB,EAA+BjB,EAA/B,CAAP;AACD,KATH,EAUGe,IAVH,CAUQ,UAACE,MAAD,EAAU;AACd,aAAOT,eAAeS,MAAf,EAAsBN,OAAtB,EAA8BC,GAA9B,CAAP;AACD,KAZH,EAaGM,KAbH,CAaS,UAACC,KAAD,EAAS;AACd,aAAOV,eAAeU,KAAf,EAAqBR,OAArB,EAA6BC,GAA7B,CAAP;AACD,KAfH;AAgBD,GAlBD;AAmBD,CA3BD","file":"index.js","sourcesContent":["/**\n * Created by kishe56@gmail.com on 2018. 9. 19.\n * Blog : https://kishe89.github.io\n * Github : https://github.com/kishe89\n */\n'use strict';\n\n\nmodule.exports = (socket,io, event)=>{\n  const Verfier = require('../../util/Verifier');\n  const JWTVerifier = new Verfier();\n  const findTargetUser = require('./middleware/findTargetUser');\n  const pushUserToRoom = require('./middleware/pushUserToRoom');\n  const sendMessageToTargetUser = require('./middleware/sendMessageToTargetUser');\n  const sendSuccessAck = require('./middleware/sendSuccessAck');\n  const sendFailureAck = require('./middleware/sendFailureAck');\n  socket.on(event,(message,ack)=>{\n\n    JWTVerifier.verify(socket,message.token)\n      .then((decodedUser)=>{\n        return findTargetUser(decodedUser,message);\n      })\n      .then((result)=>{\n        return pushUserToRoom(result,message);\n      })\n      .then((result)=>{\n        return sendMessageToTargetUser(result,io);\n      })\n      .then((result)=>{\n        return sendSuccessAck(result,message,ack);\n      })\n      .catch((error)=>{\n        return sendFailureAck(error,message,ack);\n      })\n  });\n};"]}