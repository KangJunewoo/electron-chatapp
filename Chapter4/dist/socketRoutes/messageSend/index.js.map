{"version":3,"sources":["../../../socketRoutes/messageSend/index.js"],"names":["module","exports","io","socket","event","Verfier","require","JWTVerifier","saveMessage","populateMessage","pushMessageToRoom","broadcastMessage","sendSuccessAck","sendFailureAck","on","message","ack","console","log","verify","token","then","decodedUser","messageObject","catch","error"],"mappings":"AAAA;;;;;AAKA;;AAEAA,OAAOC,OAAP,GAAiB,UAACC,EAAD,EAAIC,MAAJ,EAAWC,KAAX,EAAmB;AAClC,MAAMC,UAAUC,QAAQ,qBAAR,CAAhB;AACA,MAAMC,cAAc,IAAIF,OAAJ,EAApB;AACA,MAAMG,cAAcF,QAAQ,0BAAR,CAApB;AACA,MAAMG,kBAAkBH,QAAQ,8BAAR,CAAxB;AACA,MAAMI,oBAAoBJ,QAAQ,gCAAR,CAA1B;AACA,MAAMK,mBAAmBL,QAAQ,+BAAR,CAAzB;AACA,MAAMM,iBAAiBN,QAAQ,6BAAR,CAAvB;AACA,MAAMO,iBAAiBP,QAAQ,6BAAR,CAAvB;AACAH,SAAOW,EAAP,CAAUV,KAAV,EAAgB,UAACW,OAAD,EAASC,GAAT,EAAe;AAC7BC,YAAQC,GAAR,CAAYd,KAAZ;AACAG,gBAAYY,MAAZ,CAAmBhB,MAAnB,EAA0BY,QAAQK,KAAlC,EACGC,IADH,CACQ,UAACC,WAAD,EAAe;AACnB,aAAOd,YAAYO,OAAZ,EAAoBO,WAApB,CAAP;AACD,KAHH,EAIGD,IAJH,CAIQ,UAACE,aAAD,EAAiB;AACrB,aAAOd,gBAAgBc,aAAhB,CAAP;AACD,KANH,EAOGF,IAPH,CAOQ,UAACE,aAAD,EAAiB;AACrB,aAAOb,kBAAkBa,aAAlB,CAAP;AACD,KATH,EAUGF,IAVH,CAUQ,UAACE,aAAD,EAAiB;AACrB,aAAOZ,iBAAiBY,aAAjB,EAA+BpB,MAA/B,CAAP;AACD,KAZH,EAaGkB,IAbH,CAaQ,UAACE,aAAD,EAAiB;AACrB,aAAOX,eAAeW,aAAf,EAA6BR,OAA7B,EAAqCC,GAArC,CAAP;AACD,KAfH,EAgBGQ,KAhBH,CAgBS,UAACC,KAAD,EAAS;AACd,aAAOZ,eAAeY,KAAf,EAAqBV,OAArB,EAA6BC,GAA7B,CAAP;AACD,KAlBH;AAmBD,GArBD;AAsBD,CA/BD","file":"index.js","sourcesContent":["/**\n * Created by kishe56@gmail.com on 2018. 9. 19.\n * Blog : https://kishe89.github.io\n * Github : https://github.com/kishe89\n */\n'use strict';\n\nmodule.exports = (io,socket,event)=>{\n  const Verfier = require('../../util/Verifier');\n  const JWTVerifier = new Verfier();\n  const saveMessage = require('./middleware/saveMessage');\n  const populateMessage = require('./middleware/populateMessage');\n  const pushMessageToRoom = require('./middleware/pushMessageToRoom');\n  const broadcastMessage = require('./middleware/broadcastMessage');\n  const sendSuccessAck = require('./middleware/sendSuccessAck');\n  const sendFailureAck = require('./middleware/sendFailureAck');\n  socket.on(event,(message,ack)=>{\n    console.log(event);\n    JWTVerifier.verify(socket,message.token)\n      .then((decodedUser)=>{\n        return saveMessage(message,decodedUser);\n      })\n      .then((messageObject)=>{\n        return populateMessage(messageObject);\n      })\n      .then((messageObject)=>{\n        return pushMessageToRoom(messageObject);\n      })\n      .then((messageObject)=>{\n        return broadcastMessage(messageObject,socket);\n      })\n      .then((messageObject)=>{\n        return sendSuccessAck(messageObject,message,ack);\n      })\n      .catch((error)=>{\n        return sendFailureAck(error,message,ack);\n      })\n  });\n};"]}