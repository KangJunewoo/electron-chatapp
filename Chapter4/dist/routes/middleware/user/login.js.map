{"version":3,"sources":["../../../../routes/middleware/user/login.js"],"names":["exports","validateParameter","req","res","next","body","id","password","error","Error","status","comparePassword","UserModel","require","bcrypt","OnError","user","SearchUser","compare","compareResultResponse","isValid","findOne","select","CreatedAt","then","catch","createJsonWebToken","jsonwebtoken","options","algorithm","expiresIn","issuer","cert","plainObject","toObject","getters","sign","err","token","CreatedToken","updateUserWithToken","updateResultResponse","updatedUser","set","save","responseToUser","json"],"mappings":"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","file":"login.js","sourcesContent":["/**\n * Created by kishe56@gmail.com on 2018. 9. 18.\n * Blog : https://kishe89.github.io\n * Github : https://github.com/kishe89\n */\n'use strict';\n\n\nexports.validateParameter = (req,res,next)=>{\n  const {id,password} = req.body;\n  if(!id){\n    const error = new Error(\"Bad request\");\n    error.status = 400;\n    return next(error);\n\n  }else if(!password){\n    const error = new Error(\"Bad request\");\n    error.status = 400;\n    return next(error);\n  }\n  return next();\n};\n\nexports.comparePassword = (req,res,next)=>{\n  const UserModel = require('../../../model/User');\n  const bcrypt = require('bcrypt');\n  const {id,password} = req.body;\n  const OnError = (error)=>{\n    return next(error);\n  };\n  const comparePassword = (user)=>{\n    if(!user){\n      const error = new Error('User Not Found');\n      error.status = 404;\n      return next(error);\n    }\n    req.SearchUser = user;\n    return bcrypt.compare(password,user.password);\n\n  };\n  const compareResultResponse = (isValid)=>{\n    if(isValid){\n      return next();\n    }\n    const error = new Error('Invalid password');\n    error.status = 401;\n    return next(error);\n  };\n  UserModel.findOne({id:id}).select({id:1,password:1,CreatedAt:1})\n    .then(comparePassword)\n    .then(compareResultResponse)\n    .catch(OnError);\n};\n\nexports.createJsonWebToken = (req,res,next)=>{\n  const jsonwebtoken = require('jsonwebtoken');\n  const options = {\n    algorithm:\"HS256\",\n    expiresIn:\"1000000\",\n    issuer:\"http://127.0.0.1\"\n  };\n  const cert = \"secret\";\n  const plainObject = req.SearchUser.toObject({getters:true});\n  jsonwebtoken.sign(plainObject,cert,options,(err,token)=>{\n    if(err){\n      return next(err);\n    }\n    req.CreatedToken = token;\n    return next();\n  });\n};\n\nexports.updateUserWithToken = (req,res,next)=>{\n  const OnError = (error)=>{\n    return next(error);\n  };\n\n  const updateResultResponse = (updatedUser)=>{\n    req.SearchUser = updatedUser;\n    return next();\n  };\n  req.SearchUser.set({token:req.CreatedToken});\n  req.SearchUser.save()\n    .then(updateResultResponse)\n    .catch(OnError)\n};\nexports.responseToUser = (req,res,next)=>{\n  res.json({token:req.CreatedToken});\n};"]}