{"version":3,"sources":["../../handler_manager/index.js"],"names":["SocketEvent","require","dict","CONNECT","type","event","handler","ERROR","CONNECT_TIMEOUT","DISCONNECT","HELLO","PING","PONG","RECONNECT_ERROR","RECONNECT_FAILED","RECONNECTING","RECONNECT_ATTEMPT","RECONNECT","TOKENREFRESHREQUIRED","BROADCAST_MESSAGE","RECEIVE_INVITEUSER","module","exports"],"mappings":"AAAA;;;;;;AAMA;;AAEA,IAAIA,cAAcC,QAAQ,qBAAR,CAAlB;AACA,IAAIC,OAAO,EAAX;;AAEAA,KAAKF,YAAYG,OAAjB,IAA4B;AAC1BC,QAAM,CADoB;AAE1BC,SAAOL,YAAYG,OAFO;AAG1BG,WAASL,QAAQ,qBAAR;AAHiB,CAA5B;AAKAC,KAAKF,YAAYO,KAAjB,IAA0B;AACxBH,QAAM,CADkB;AAExBC,SAAOL,YAAYO,KAFK;AAGxBD,WAASL,QAAQ,mBAAR;AAHe,CAA1B;AAKAC,KAAKF,YAAYQ,eAAjB,IAAoC;AAClCJ,QAAM,CAD4B;AAElCC,SAAOL,YAAYQ,eAFe;AAGlCF,WAASL,QAAQ,4BAAR;AAHyB,CAApC;AAKAC,KAAKF,YAAYS,UAAjB,IAA+B;AAC7BL,QAAM,CADuB;AAE7BC,SAAOL,YAAYS,UAFU;AAG7BH,WAASL,QAAQ,wBAAR;AAHoB,CAA/B;AAKAC,KAAKF,YAAYU,KAAjB,IAA0B;AACxBN,QAAM,CADkB;AAExBC,SAAOL,YAAYU,KAFK;AAGxBJ,WAASL,QAAQ,mBAAR;AAHe,CAA1B;AAKAC,KAAKF,YAAYW,IAAjB,IAAyB;AACvBP,QAAM,CADiB;AAEvBC,SAAOL,YAAYW,IAFI;AAGvBL,WAASL,QAAQ,kBAAR;AAHc,CAAzB;AAKAC,KAAKF,YAAYY,IAAjB,IAAyB;AACvBR,QAAM,CADiB;AAEvBC,SAAOL,YAAYY,IAFI;AAGvBN,WAASL,QAAQ,kBAAR;AAHc,CAAzB;AAKAC,KAAKF,YAAYa,eAAjB,IAAoC;AAClCT,QAAM,CAD4B;AAElCC,SAAOL,YAAYa,eAFe;AAGlCP,WAASL,QAAQ,4BAAR;AAHyB,CAApC;AAKAC,KAAKF,YAAYc,gBAAjB,IAAqC;AACnCV,QAAM,CAD6B;AAEnCC,SAAOL,YAAYc,gBAFgB;AAGnCR,WAASL,QAAQ,6BAAR;AAH0B,CAArC;AAKAC,KAAKF,YAAYe,YAAjB,IAAiC;AAC/BX,QAAM,CADyB;AAE/BC,SAAOL,YAAYe,YAFY;AAG/BT,WAASL,QAAQ,0BAAR;AAHsB,CAAjC;;AAMAC,KAAKF,YAAYgB,iBAAjB,IAAsC;AACpCZ,QAAM,CAD8B;AAEpCC,SAAOL,YAAYgB,iBAFiB;AAGpCV,WAASL,QAAQ,8BAAR;AAH2B,CAAtC;;AAMAC,KAAKF,YAAYiB,SAAjB,IAA8B;AAC5Bb,QAAM,CADsB;AAE5BC,SAAOL,YAAYiB,SAFS;AAG5BX,WAASL,QAAQ,uBAAR;AAHmB,CAA9B;AAKAC,KAAKF,YAAYkB,oBAAjB,IAAyC;AACvCd,QAAM,CADiC;AAEvCC,SAAOL,YAAYkB,oBAFoB;AAGvCZ,WAASL,QAAQ,mCAAR;AAH8B,CAAzC;AAKAC,KAAKF,YAAYmB,iBAAjB,IAAsC;AACpCf,QAAM,CAD8B;AAEpCC,SAAOL,YAAYmB,iBAFiB;AAGpCb,WAASL,QAAQ,8BAAR;AAH2B,CAAtC;AAKAC,KAAKF,YAAYoB,kBAAjB,IAAuC;AACrChB,QAAM,CAD+B;AAErCC,SAAOL,YAAYoB,kBAFkB;AAGrCd,WAASL,QAAQ,+BAAR;AAH4B,CAAvC;;AAMAoB,OAAOC,OAAP,GAAiBpB,IAAjB;AACA","file":"index.js","sourcesContent":["/**\n * Created by kishe56@gmail.com on 2018. 7. 3.\n * Blog : https://kishe89.github.io\n * Github : https://github.com/kishe89\n */\n\n'use strict';\n\nvar SocketEvent = require('./event/SocketEvent');\nvar dict = [];\n\ndict[SocketEvent.CONNECT] = {\n  type: 0,\n  event: SocketEvent.CONNECT,\n  handler: require('./handler/OnConnect')\n};\ndict[SocketEvent.ERROR] = {\n  type: 1,\n  event: SocketEvent.ERROR,\n  handler: require('./handler/OnError')\n};\ndict[SocketEvent.CONNECT_TIMEOUT] = {\n  type: 0,\n  event: SocketEvent.CONNECT_TIMEOUT,\n  handler: require('./handler/OnConnectTimeout')\n};\ndict[SocketEvent.DISCONNECT] = {\n  type: 1,\n  event: SocketEvent.DISCONNECT,\n  handler: require('./handler/OnDisconnect')\n};\ndict[SocketEvent.HELLO] = {\n  type: 0,\n  event: SocketEvent.HELLO,\n  handler: require('./handler/OnHello')\n};\ndict[SocketEvent.PING] = {\n  type: 0,\n  event: SocketEvent.PING,\n  handler: require('./handler/OnPing')\n};\ndict[SocketEvent.PONG] = {\n  type: 0,\n  event: SocketEvent.PONG,\n  handler: require('./handler/OnPong')\n};\ndict[SocketEvent.RECONNECT_ERROR] = {\n  type: 0,\n  event: SocketEvent.RECONNECT_ERROR,\n  handler: require('./handler/OnReconnectError')\n};\ndict[SocketEvent.RECONNECT_FAILED] = {\n  type: 0,\n  event: SocketEvent.RECONNECT_FAILED,\n  handler: require('./handler/OnReconnectFailed')\n};\ndict[SocketEvent.RECONNECTING] = {\n  type: 0,\n  event: SocketEvent.RECONNECTING,\n  handler: require('./handler/OnReconnecting')\n};\n\ndict[SocketEvent.RECONNECT_ATTEMPT] = {\n  type: 1,\n  event: SocketEvent.RECONNECT_ATTEMPT,\n  handler: require('./handler/OnReconnectAttempt')\n};\n\ndict[SocketEvent.RECONNECT] = {\n  type: 0,\n  event: SocketEvent.RECONNECT,\n  handler: require('./handler/OnReconnect')\n};\ndict[SocketEvent.TOKENREFRESHREQUIRED] = {\n  type: 1,\n  event: SocketEvent.TOKENREFRESHREQUIRED,\n  handler: require('./handler/OnTokenRefereshRequired')\n};\ndict[SocketEvent.BROADCAST_MESSAGE] = {\n  type: 1,\n  event: SocketEvent.BROADCAST_MESSAGE,\n  handler: require('./handler/OnBroadcastMessage')\n};\ndict[SocketEvent.RECEIVE_INVITEUSER] = {\n  type: 1,\n  event: SocketEvent.RECEIVE_INVITEUSER,\n  handler: require('./handler/OnReceiveInviteUser')\n};\n\nmodule.exports = dict;\n//# sourceMappingURL=index.js.map"]}