{"version":3,"sources":["../../webScripts/NotificationList.js"],"names":["NotificationList","Error","prototype","createNotification","item","Promise","resolve","reject","title","sender","id","options","body","message","data","room","undefined","Notification","createRoomNotification","roomName","module","exports"],"mappings":"AAAA;;;;;AAKA;;AAEA,SAASA,gBAAT,GAA4B;AAC1B,MAAG,EAAE,gBAAgBA,gBAAlB,CAAH,EAAuC;AACrC,UAAM,IAAIC,KAAJ,CAAU,kCAAV,CAAN;AACD;AACF;;AAEDD,iBAAiBE,SAAjB,CAA2BC,kBAA3B,GAAgD,UAAUC,IAAV,EAAgB;AAC9D,SAAO,IAAIC,OAAJ,CAAY,UAACC,OAAD,EAASC,MAAT,EAAkB;AACnC,QAAMC,QAAQJ,KAAKK,MAAL,CAAYC,EAA1B;AACA,QAAMC,UAAU;AACdC,YAAKR,KAAKS,OADI;AAEdC,YAAK;AACHC,cAAKX,KAAKW,IADP;AAEHN,gBAAOL,KAAKK;AAFT;AAFS,KAAhB;AAOAL,aAASY,SAAT,GAAmBT,QAAnB,GAA4BD,QAAQ,IAAIW,YAAJ,CAAiBT,KAAjB,EAAuBG,OAAvB,CAAR,CAA5B;AACD,GAVM,CAAP;AAWD,CAZD;AAaAX,iBAAiBE,SAAjB,CAA2BgB,sBAA3B,GAAoD,UAAUd,IAAV,EAAgB;AAClE,SAAO,IAAIC,OAAJ,CAAY,UAACC,OAAD,EAASC,MAAT,EAAkB;AACnC,QAAMC,QAAWJ,KAAKK,MAAL,CAAYC,EAAvB,qBAA+BN,KAAKW,IAAL,CAAUI,QAAzC,uDAAN;AACA,QAAMR,UAAU;AACdC,YAAKR,KAAKS,OADI;AAEdC,YAAK;AACHC,cAAKX,KAAKW,IADP;AAEHN,gBAAOL,KAAKK;AAFT;AAFS,KAAhB;AAOAL,aAASY,SAAT,GAAmBT,QAAnB,GAA4BD,QAAQ,IAAIW,YAAJ,CAAiBT,KAAjB,EAAuBG,OAAvB,CAAR,CAA5B;AACD,GAVM,CAAP;AAWD,CAZD;;AAcAS,OAAOC,OAAP,GAAiBrB,gBAAjB","file":"NotificationList.js","sourcesContent":["/**\n * Created by kishe56@gmail.com on 2018. 9. 20.\n * Blog : https://kishe89.github.io\n * Github : https://github.com/kishe89\n */\n'use strict';\n\nfunction NotificationList() {\n  if(!(this instanceof NotificationList)){\n    throw new Error('must be created with new keyword');\n  }\n}\n\nNotificationList.prototype.createNotification = function (item) {\n  return new Promise((resolve,reject)=>{\n    const title = item.sender.id;\n    const options = {\n      body:item.message,\n      data:{\n        room:item.room,\n        sender:item.sender\n      }\n    };\n    item === undefined?reject():resolve(new Notification(title,options));\n  });\n};\nNotificationList.prototype.createRoomNotification = function (item) {\n  return new Promise((resolve,reject)=>{\n    const title = `${item.sender.id}님이 ${item.room.roomName}에 초대하셨습니다.`;\n    const options = {\n      body:item.message,\n      data:{\n        room:item.room,\n        sender:item.sender\n      }\n    };\n    item === undefined?reject():resolve(new Notification(title,options));\n  });\n};\n\nmodule.exports = NotificationList;"]}